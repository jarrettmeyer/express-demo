#!/usr/bin/env node
'use strict';
const createDocument = require('../server/services/createDocument');
const createUser = require('../server/services/createUser');
const Promise = require('bluebird');
const documents = require('../fixtures/documents');
const users = require('../fixtures/users');
const _ = require('lodash');

let result = {};

function done() {
  process.exit(0);
}

function error(error) {
  console.error(error);
  process.exit(1);
}


return Promise.map(users, createUser)
  .then(savedUsers => {
    // console.log('saved users:', savedUsers);
    result.users = savedUsers;
    documents.forEach(doc => {
      doc.owner = _.find(result.users, { email: doc.ownerEmail });
      if (!doc.owner) {
        throw new Error(`Document ${doc.title} does not have a valid owner. Email: ${doc.ownerEmail}.`);
      }
      else {
        doc.ownerId = doc.owner.id;
      }
    });
    return Promise.map(documents, createDocument);
  })
  .then(savedDocuments => {
    result.documents = savedDocuments;
  })
  .then(done)
  .catch(error);
